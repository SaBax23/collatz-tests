==24== Memcheck, a memory error detector
==24== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==24== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==24== Command: ./TestCollatz
==24== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (24 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (13 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (65 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (3 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (5 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (2 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_1
[       OK ] CollatzFixture.cycle_length_1 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_2
[       OK ] CollatzFixture.cycle_length_2 (3 ms)
[ RUN      ] CollatzFixture.check_cache_1
[       OK ] CollatzFixture.check_cache_1 (2 ms)
[ RUN      ] CollatzFixture.check_cache_2
[       OK ] CollatzFixture.check_cache_2 (3 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (9 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (7 ms)
[----------] 15 tests from CollatzFixture (180 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (242 ms total)
[  PASSED  ] 15 tests.
==24== 
==24== HEAP SUMMARY:
==24==     in use at exit: 72,704 bytes in 1 blocks
==24==   total heap usage: 269 allocs, 268 frees, 136,658 bytes allocated
==24== 
==24== LEAK SUMMARY:
==24==    definitely lost: 0 bytes in 0 blocks
==24==    indirectly lost: 0 bytes in 0 blocks
==24==      possibly lost: 0 bytes in 0 blocks
==24==    still reachable: 72,704 bytes in 1 blocks
==24==         suppressed: 0 bytes in 0 blocks
==24== Rerun with --leak-check=full to see details of leaked memory
==24== 
==24== For counts of detected and suppressed errors, rerun with: -v
==24== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 46
Branches executed:100.00% of 30
Taken at least once:86.67% of 30
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'
